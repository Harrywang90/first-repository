import sqlite3  
'''导入SQLite3驱动'''

conn = sqlite3.connect('test.db')
'''链接到SQLite数据库'''

cursor = conn.cursor()
'''创建一个Cursor'''

cursor.execute('create table user (id varchar(20) primary key , name varchar(20))')
'''执行一条SQL语句，创建user表'''

cursor.execute('insert into user (id, name) values(\'1\', \'Michael\')')
'''执行一条SQL语句，插入一条记录'''

cursor.rowcount
'''查询行数'''

cursor.close()   '''关闭cursor''' #cursor一定要关闭

conn.commit()
'''提交事务'''

conn.close()
'''关闭Connection'''#connection 一定要关闭


values = cursor.fetchall()
''' 获得查询结果集'''
values
''''使用Cursor对象执行insert，update，delete语句时，执行结果由rowcount返回影响的行数，就可以拿到执行结果。'''

'''使用Cursor对象执行select语句时，通过featchall()可以拿到结果集。结果集是一个list，每个元素都是一个tuple，对应一行记录。'''



'''for example'''
'''在Sqlite中根据分数段查找指定的名字：'''

db_file=os.path.join(os.path.dirname(__file__), 'test.db')
#print(__file__)
#print(db_file)

if os.path.isfile(db_file):
    os.remove(db_file)

conn = sqlite3.connect(db_file)
cursor =conn.cursor()
cursor.execute('create table user (id varchar(20) primary key, name varchar(20), score int)')
cursor.execute("insert into user values ('A-001', 'Adam', 95)")
cursor.execute("insert into user values ('A-002', 'Bart', 62)")
cursor.execute("insert into user values ('A-003', 'Lisa', 78)")

cursor.close()
conn.commit()
conn.close()

def get_score_in(low, high):
    '''返回指定分数区间的名字，按分数从低到高排序'''
    #del conn
    #del cursor
    conn = sqlite3.connect(db_file)
    cursor = conn.cursor()
    cursor.execute('select name from user where score between ? and ? order by score', (low, high))

    result = cursor.fetchall()
    print(result)
    
    cursor.close()
    conn.commit()
    conn.close()
    
    


get_score_in(50, 100)
    
